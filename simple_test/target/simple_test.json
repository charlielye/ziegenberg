{"noir_version":"1.0.0-beta.7+0e8194d367871aa22017a09594777449696ccc7f","hash":"4433531966065933404","abi":{"parameters":[{"name":"x","type":{"kind":"integer","sign":"unsigned","width":32},"visibility":"private"},{"name":"y","type":{"kind":"integer","sign":"unsigned","width":32},"visibility":"private"}],"return_type":{"abi_type":{"kind":"integer","sign":"unsigned","width":32},"visibility":"public"},"error_types":{"2920182694213909827":{"error_kind":"string","string":"attempt to subtract with overflow"},"5019202896831570965":{"error_kind":"string","string":"attempt to add with overflow"},"7233212735005103307":{"error_kind":"string","string":"attempt to multiply with overflow"},"17843811134343075018":{"error_kind":"string","string":"Stack too deep"}}},"bytecode":"H4sIAAAAAAAA/71WyU7DMBAdJ20hVJVYJE4c4IK4gOzYTpxbD5T/cLb//wRaMVanQ9Ki4nSkyMs8v9kc2wJ+JN1+c+wLHAscP7M5gXMz1CfwW8LaNbbyf6Iicskp/RQR/RTEz5QXJsUiUEkiB5MQLi0LY7oy75RWXuZV7aw0ti6ccso62+ZO684ZV1Z1VcpKGd2p3la6R7I0cmKGNp8Y6A/pS2wzhgl5XUfKX8bsRuRXUpoyg0OJ7L/OCOcE/Hngn03DL6+Q5xMrwGMJdlOGG1oTMBuC2TDMCvYHJOcJOrofw/rr7XeLc7v+HfZX2H4RO4E7Y3yR91Yxce3Vw4j/O1liHt6IjuoBDi8jGOCi9V2M4APfnOEfYV+LD5bvCf7lneSCxZDA4VkPA/YF7C/tlOCTI/gQ44zg+cU/lJMnkhN1mZz4Y3X/S4yLEfxYjC8kxgvV3YoR/07V/dy9/UpiNNhfwfi/tIT9PTlj5906Qg5274NgN0X+ORzWHJj9OcO/4/iG+A8k7vWZfvalV732vbe+bU3j7xk/sDzFtm+sLxtfKlUZ1RllL22/MIVyzrumaPrKNPWl7efOFVVeb186bdO3Rp+y/w0NjufjzQwAAA==","debug_symbols":"nZLLqoMwEIbfJesscvX2KiISNS2BECXVwkF89zNxtKddHChu8hkn3zAh/0oG2y331oXb+CBVvZIuOu/dvfVjb2Y3Bvi7EpYWXpCKU8LLHYIhOEKQSgAkQiE0IkPkCOgiAeUOyRAcIRDQRQEUQiMyBHRR20bJOV87R2vTeG8DwzUmE22YSRUW7yl5Gr/shx6TCTtnE6HKKLFhAELDm/M2fW30z2b/q4LxQxYse+n6ez97+Tm/4EuuDl8KfcXPy9Mvygu+lvrwtSo+/AZ2pnfxM0LwtCDAy6ZhnyY603mbKsldQn8ehO38M52VM41THHs7LNGmpm+RhLVWjCrdQDAhRLUWVKtmS1P8Ag==","file_map":{"50":{"source":"// Simple test for breakpoint functionality\n// Using unconstrained to force Brillig compilation\n\nunconstrained fn compute(x: u32, y: u32) -> u32 {\n    // Line 5: First computation\n    let mut result = x + y;\n    \n    // Line 8: Double the result  \n    result = result * 2;\n    \n    // Line 11: Add 10\n    result = result + 10;\n    \n    // Line 14: Final computation\n    result = result - 5;\n    \n    // Line 17: Return\n    result\n}\n\nfn main(x: u32, y: u32) -> pub u32 {\n    // Call the unconstrained function\n    let result = unsafe { compute(x, y) };\n    result\n}","path":"/mnt/user-data/charlie/ziegenberg/simple_test/src/main.nr"}},"names":["main"],"brillig_names":["compute"]}